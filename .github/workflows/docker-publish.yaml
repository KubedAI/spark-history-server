name: Build and Push Multi-Arch Docker Image to GHCR

on:
  push:
    branches: [main]
    paths:
      - 'stable/spark-history-server/Chart.yaml'
      - 'docker/Dockerfile'
      - '**/*.sh'
      - '**/*.yaml'
  workflow_dispatch:
    inputs:
      override_version:
        description: 'Optional override for appVersion (e.g. 1.3.2)'
        required: false
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine image version (manual or Chart.yaml)
        id: extract_version
        run: |
          if [ -n "${{ github.event.inputs.override_version }}" ]; then
            VERSION="${{ github.event.inputs.override_version }}"
          else
            VERSION=$(grep '^appVersion:' stable/spark-history-server/Chart.yaml | awk '{print $2}')
          fi
          if [ -z "$VERSION" ]; then
            echo "❌ ERROR: Version could not be determined"
            exit 1
          fi
          echo "✅ Using version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if image tag exists in GHCR
        id: tagcheck
        env:
          GHCR_USER: ${{ github.repository_owner }}
          IMAGE: ${{ github.repository }}
          TAG: ${{ steps.extract_version.outputs.VERSION }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Checking for ghcr.io/${GHCR_USER}/${IMAGE}:${TAG}"
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.oci.image.manifest.v1+json" \
            https://ghcr.io/v2/${GHCR_USER}/${IMAGE}/manifests/${TAG})
          
          echo "GHCR tag check returned HTTP status: $STATUS"
          if [ "$STATUS" = "200" ]; then
            echo "Image already exists. Skipping build."
            echo "skip_build=true" >> $GITHUB_OUTPUT
          else
            echo "Image not found. Proceeding with build."
            echo "skip_build=false" >> $GITHUB_OUTPUT

      - name: Build and push multi-arch image to GHCR
        if: steps.tagcheck.outputs.skip_build == 'false'
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.extract_version.outputs.VERSION }}
            ghcr.io/${{ github.repository }}:latest
